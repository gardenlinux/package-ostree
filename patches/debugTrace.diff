diff --color -Naur deb-pkg-ostree-orig/src/libostree/ostree-sysroot.c deb-pkg-ostree-working-copy/src/libostree/ostree-sysroot.c
--- deb-pkg-ostree-orig/src/libostree/ostree-sysroot.c	2023-09-06 16:08:48.148445008 +0200
+++ deb-pkg-ostree-working-copy/src/libostree/ostree-sysroot.c	2023-09-11 15:03:06.744799423 +0200
@@ -959,7 +959,12 @@
 gboolean
 ostree_sysroot_load (OstreeSysroot *self, GCancellable *cancellable, GError **error)
 {
+  printf("%s\n", ">>>DBG>> start ostree_sysroot_load");
+  g_debug("%s\n", ">>>DBG>> start ostree_sysroot_load");
   return ostree_sysroot_load_if_changed (self, NULL, cancellable, error);
+  printf("%s\n", ">>>DBG>> end ostree_sysroot_load");
+  g_debug("%s\n", ">>>DBG>> end ostree_sysroot_load");
+
 }
 
 static gboolean
@@ -1119,6 +1124,9 @@
 sysroot_load_from_bootloader_configs (OstreeSysroot *self, GCancellable *cancellable,
                                       GError **error)
 {
+  printf("%s\n", ">>>DBG>> start sysroot_load_from_bootloader_configs");
+  g_debug("%s\n", ">>>DBG>> start sysroot_load_from_bootloader_configs");
+
   struct stat stbuf;
 
   int bootversion = 0;
@@ -1207,12 +1215,18 @@
       /* Otherwise, the default is FALSE */
 
       self->loadstate = OSTREE_SYSROOT_LOAD_STATE_LOADED;
+      printf("%s\n", ">>>DBG>> self->loadstate = OSTREE_SYSROOT_LOAD_STATE_LOADED");
+      g_debug("%s\n", ">>>DBG>> self->loadstate = OSTREE_SYSROOT_LOAD_STATE_LOADED");
+
     }
 
   self->bootversion = bootversion;
   self->subbootversion = subbootversion;
   self->deployments = g_steal_pointer (&deployments);
 
+  printf("%s\n", ">>>DBG>> start sysroot_load_from_bootloader_configs");
+  g_debug("%s\n", ">>>DBG>> start sysroot_load_from_bootloader_configs");
+
   return TRUE;
 }
 
@@ -1229,6 +1243,8 @@
 ostree_sysroot_load_if_changed (OstreeSysroot *self, gboolean *out_changed,
                                 GCancellable *cancellable, GError **error)
 {
+  printf("%s\n", ">>>DBG>> start ostree_sysroot_load_if_changed");
+  g_debug("%s\n", ">>>DBG>> start ostree_sysroot_load_if_changed");
   GLNX_AUTO_PREFIX_ERROR ("loading sysroot", error);
 
   if (!ostree_sysroot_initialize (self, error))
@@ -1268,6 +1284,9 @@
   if (out_changed)
     *out_changed = TRUE;
   return TRUE;
+
+  printf("%s\n", ">>>DBG>> end ostree_sysroot_load_if_changed");
+  g_debug("%s\n", ">>>DBG>> end ostree_sysroot_load_if_changed");
 }
 
 int
diff --color -Naur deb-pkg-ostree-orig/src/ostree/ot-admin-builtin-deploy.c deb-pkg-ostree-working-copy/src/ostree/ot-admin-builtin-deploy.c
--- deb-pkg-ostree-orig/src/ostree/ot-admin-builtin-deploy.c	2023-09-06 16:08:48.148445008 +0200
+++ deb-pkg-ostree-working-copy/src/ostree/ot-admin-builtin-deploy.c	2023-09-11 15:03:30.786226835 +0200
@@ -90,14 +90,20 @@
 ot_admin_builtin_deploy (int argc, char **argv, OstreeCommandInvocation *invocation,
                          GCancellable *cancellable, GError **error)
 {
+  printf("%s\n", ">>>DBG>> ot_admin_builtin_deploy");
+  g_debug("%s\n", ">>>DBG>> ot_admin_builtin_deploy");
   g_autoptr (GOptionContext) context = g_option_context_new ("REFSPEC");
 
   g_autoptr (OstreeSysroot) sysroot = NULL;
+  printf("%s\n", ">>>DBG>> before ostree_admin_option_context_parse");
+  g_debug("%s\n", ">>>DBG>> before ostree_admin_option_context_parse");
   if (!ostree_admin_option_context_parse (context, options, &argc, &argv,
                                           OSTREE_ADMIN_BUILTIN_FLAG_SUPERUSER, invocation, &sysroot,
                                           cancellable, error))
     return FALSE;
 
+  printf("%s\n", ">>>DBG>> after ostree_admin_option_context_parse");
+  g_debug("%s\n", ">>>DBG>> after ostree_admin_option_context_parse");
   if (argc < 2)
     {
       ot_util_usage_error (context, "REF/REV must be specified", error);
diff --color -Naur deb-pkg-ostree-orig/src/ostree/ot-main.c deb-pkg-ostree-working-copy/src/ostree/ot-main.c
--- deb-pkg-ostree-orig/src/ostree/ot-main.c	2023-09-06 16:08:48.152444851 +0200
+++ deb-pkg-ostree-working-copy/src/ostree/ot-main.c	2023-09-11 15:04:22.372662724 +0200
@@ -554,6 +554,8 @@
 ostree_admin_sysroot_load (OstreeSysroot *sysroot, OstreeAdminBuiltinFlags flags,
                            GCancellable *cancellable, GError **error)
 {
+  printf("%s\n", ">>>DBG>> start ostree_admin_sysroot_load");
+  g_debug("%s\n", ">>>DBG>> start ostree_admin_sysroot_load");
   if ((flags & OSTREE_ADMIN_BUILTIN_FLAG_UNLOCKED) == 0)
     {
       /* Set up the mount namespace, if applicable */
@@ -583,6 +585,9 @@
         }
     }
 
+  printf("%s\n", ">>>DBG>> end ostree_admin_sysroot_load");
+  g_debug("%s\n", ">>>DBG>> end ostree_admin_sysroot_load");
+
   return TRUE;
 }
 
@@ -592,6 +597,8 @@
                                    OstreeCommandInvocation *invocation, OstreeSysroot **out_sysroot,
                                    GCancellable *cancellable, GError **error)
 {
+  printf("%s\n", ">>>DBG>> start ostree_admin_option_context_parse");
+  g_debug("%s\n", ">>>DBG>> start ostree_admin_option_context_parse");
   /* Entries are listed in --help output in the order added.  We add the
    * main entries ourselves so that we can add the --sysroot entry first. */
 
@@ -617,11 +624,17 @@
     return FALSE;
   g_signal_connect (sysroot, "journal-msg", G_CALLBACK (on_sysroot_journal_msg), NULL);
 
+  printf("%s\n", ">>>DBG>> trace (opt_print_current_dir || (flags & OSTREE_ADMIN_BUILTIN_FLAG_NO_LOAD) == 0)");
+  g_debug("%s\n", ">>>DBG>> trace (opt_print_current_dir || (flags & OSTREE_ADMIN_BUILTIN_FLAG_NO_LOAD) == 0)");
   if (opt_print_current_dir || (flags & OSTREE_ADMIN_BUILTIN_FLAG_NO_LOAD) == 0)
     {
+      printf("%s\n", ">>>DBG>> trace ostree_admin_sysroot_load");
+      g_debug("%s\n", ">>>DBG>> trace ostree_admin_sysroot_load");
       if (!ostree_admin_sysroot_load (sysroot, flags, cancellable, error))
         return FALSE;
     }
+    printf("%s\n", ">>>DBG>> after ostree_admin_sysroot_load");
+    g_debug("%s\n", ">>>DBG>> after ostree_admin_sysroot_load");
 
   if (opt_print_current_dir)
     {
